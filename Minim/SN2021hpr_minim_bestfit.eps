%!PS-Adobe-2.0 EPSF-2.0
%%Title: Minim_plot.eps
%%Creator: gnuplot 4.3 patchlevel 0
%%CreationDate: Thu Aug 31 14:37:07 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 7 true/false flags may be edited by hand if required.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Minim_plot.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.3 patchlevel 0)
  /Author (Jozsef Vinko,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Aug 31 14:37:07 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
946 704 M
63 0 V
5860 0 R
-63 0 V
stroke
814 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
946 1213 M
63 0 V
5860 0 R
-63 0 V
stroke
814 1213 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 2)]
] -73.3 MRshow
1.000 UL
LTb
946 1722 M
63 0 V
5860 0 R
-63 0 V
stroke
814 1722 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 4)]
] -73.3 MRshow
1.000 UL
LTb
946 2231 M
63 0 V
5860 0 R
-63 0 V
stroke
814 2231 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 6)]
] -73.3 MRshow
1.000 UL
LTb
946 2740 M
63 0 V
5860 0 R
-63 0 V
stroke
814 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 8)]
] -73.3 MRshow
1.000 UL
LTb
946 3248 M
63 0 V
5860 0 R
-63 0 V
stroke
814 3248 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MRshow
1.000 UL
LTb
946 3757 M
63 0 V
5860 0 R
-63 0 V
stroke
814 3757 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 12)]
] -73.3 MRshow
1.000 UL
LTb
946 4266 M
63 0 V
5860 0 R
-63 0 V
stroke
814 4266 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 14)]
] -73.3 MRshow
1.000 UL
LTb
946 4775 M
63 0 V
5860 0 R
-63 0 V
stroke
814 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 16)]
] -73.3 MRshow
1.000 UL
LTb
946 704 M
0 63 V
0 4008 R
0 -63 V
stroke
946 484 M
[ [(Helvetica) 220.0 0.0 true true 0 (-20)]
] -73.3 MCshow
1.000 UL
LTb
1933 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1933 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
2920 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2920 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 20)]
] -73.3 MCshow
1.000 UL
LTb
3908 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3908 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 40)]
] -73.3 MCshow
1.000 UL
LTb
4895 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4895 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 60)]
] -73.3 MCshow
1.000 UL
LTb
5882 704 M
0 63 V
0 4008 R
0 -63 V
stroke
5882 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 80)]
] -73.3 MCshow
1.000 UL
LTb
6869 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6869 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
946 4775 N
946 704 L
5923 0 V
0 4071 V
-5923 0 V
Z stroke
LCb setrgbcolor
176 2739 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Luminosity \(10)]
[(Helvetica) 176.0 110.0 true true 0 (42)]
[(Helvetica) 220.0 0.0 true true 0 ( erg/s\))]
] -95.3 MCshow
grestore
LTb
LCb setrgbcolor
3907 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Rest-frame days from maximum light)]
] -73.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UP
1.000 UL
LT0
/Helvetica findfont 220 scalefont setfont
1189 911 M
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
13 109 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
68 509 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
16 223 R
0 135 V
-31 -135 R
62 0 V
-62 135 R
62 0 V
19 208 R
0 135 V
-31 -135 R
62 0 V
-62 135 R
62 0 V
66 438 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
217 636 R
0 338 V
-31 -338 R
62 0 V
-62 338 R
62 0 V
13 -244 R
0 304 V
-31 -304 R
62 0 V
-62 304 R
62 0 V
160 -217 R
0 417 V
-31 -417 R
62 0 V
-62 417 R
62 0 V
23 -861 R
0 645 V
-31 -645 R
62 0 V
-62 645 R
62 0 V
116 -844 R
0 543 V
-31 -543 R
62 0 V
-62 543 R
62 0 V
115 -854 R
0 361 V
-31 -361 R
62 0 V
-62 361 R
62 0 V
114 -743 R
0 186 V
-31 -186 R
62 0 V
-62 186 R
62 0 V
25 -418 R
0 272 V
-31 -272 R
62 0 V
-62 272 R
62 0 V
11 -248 R
0 196 V
-31 -196 R
62 0 V
-62 196 R
62 0 V
67 -406 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
120 -347 R
0 123 V
-31 -123 R
62 0 V
-62 123 R
62 0 V
14 -161 R
0 104 V
-31 -104 R
62 0 V
stroke 2924 1866 M
-62 104 R
62 0 V
70 -180 R
0 80 V
-31 -80 R
62 0 V
-62 80 R
62 0 V
15 -112 R
0 76 V
-31 -76 R
62 0 V
-62 76 R
62 0 V
214 -246 R
0 62 V
-31 -62 R
62 0 V
-62 62 R
62 0 V
65 -160 R
0 68 V
-31 -68 R
62 0 V
-62 68 R
62 0 V
71 -157 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
214 -243 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
15 -70 R
0 57 V
-31 -57 R
62 0 V
-62 57 R
62 0 V
215 -148 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
116 -70 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
14 -70 R
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
24 -70 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
5095 906 M
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
-326 2 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
5388 890 M
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
408 -82 R
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
214 -71 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
514 -89 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
stroke 6648 851 M
211 -53 R
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
1189 936 CircleF
1233 1096 CircleF
1332 1676 CircleF
1379 2010 CircleF
1429 2353 CircleF
1526 2955 CircleF
1774 3856 CircleF
1818 3933 CircleF
2009 4076 CircleF
2063 3746 CircleF
2210 3497 CircleF
2356 3094 CircleF
2501 2625 CircleF
2557 2436 CircleF
2599 2422 CircleF
2697 2183 CircleF
2848 1965 CircleF
2893 1918 CircleF
2994 1830 CircleF
3040 1796 CircleF
3285 1619 CircleF
3381 1524 CircleF
3483 1427 CircleF
3728 1236 CircleF
3774 1222 CircleF
4020 1127 CircleF
4167 1108 CircleF
4212 1089 CircleF
4267 1070 CircleF
5095 932 CircleF
4800 985 CircleF
5388 915 CircleF
5827 884 CircleF
6072 863 CircleF
6617 826 CircleF
6859 824 CircleF
% End plot #1
% Begin plot #2
1.000 UL
LTb
/Helvetica findfont 220 scalefont setfont
1090 704 M
49 55 V
50 152 V
49 226 V
49 279 V
50 313 V
49 329 V
50 329 V
49 317 V
49 293 V
50 260 V
49 222 V
49 182 V
50 139 V
49 98 V
49 57 V
50 19 V
49 -15 V
49 -46 V
50 -72 V
49 -95 V
50 -111 V
49 -123 V
49 -131 V
50 -135 V
49 -135 V
49 -134 V
50 -130 V
49 -123 V
49 -118 V
50 -111 V
49 -103 V
49 -96 V
50 -89 V
49 -82 V
50 -76 V
49 -71 V
49 -65 V
50 -61 V
49 -56 V
49 -53 V
50 -49 V
49 -45 V
49 -43 V
50 -40 V
49 -38 V
49 -35 V
50 -33 V
49 -32 V
50 -29 V
49 -29 V
49 -27 V
50 -25 V
49 -24 V
49 -22 V
50 -22 V
49 -21 V
49 -19 V
50 -19 V
49 -18 V
50 -17 V
49 -16 V
49 -16 V
50 -14 V
49 -14 V
49 -14 V
50 -13 V
49 -12 V
49 -12 V
50 -12 V
49 -11 V
49 -10 V
50 -10 V
49 -10 V
50 -9 V
49 -9 V
49 -9 V
50 -8 V
49 -8 V
49 -7 V
50 -8 V
49 -7 V
49 -7 V
50 -6 V
49 -6 V
49 -6 V
50 -6 V
49 -6 V
50 -5 V
49 -6 V
49 -5 V
50 -5 V
49 -4 V
49 -5 V
50 -4 V
49 -4 V
49 -5 V
50 -3 V
49 -4 V
49 -4 V
50 -4 V
49 -3 V
50 -4 V
49 -3 V
49 -3 V
stroke 6223 819 M
50 -3 V
49 -3 V
49 -3 V
50 -3 V
49 -2 V
49 -3 V
50 -2 V
49 -3 V
50 -2 V
49 -2 V
49 -3 V
50 -2 V
% End plot #2
stroke
946 4775 N
946 704 L
5923 0 V
0 4071 V
-5923 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
